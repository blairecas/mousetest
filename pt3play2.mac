;---------------------------------------------------------------------
;	PT3 PLAYER with TS support by KUVO, 2022 CSI
;	
;		!!! This is a test sample under development !!!
;		!!!    Some tracks may not play correctly	!!!
;
;		!!! PT2 format is not supported !!!
;
;	BASED ON Universal PT3 player for ZX Spectrum and MSX by S.V.Bulba
;
;	PLATFORM:		BK-0011M (maybe BK-0010)
;	SOUND DEVICES:	LEGACY AY/YM, GryphonSound, TurboSound, AZBK
;
;	COMPILER:		PDPy11
;---------------------------------------------------------------------

EXAMPLE_PLAY:
			
			PALETTE_BK11 = 13

			MOV #1330, @#177664
			MOV #5000, @#177716

			MOV SP, SP_BRFORE_START
			MOV @#4, V4_BRFORE_START
			MOV #EXAMPLE_PLAY_EXIT, @#4

			CALL @PLAYER_ENTRY_POINTS 			;INIT
			
			MOV #2,@#102
			MOV #102,@#100
			MTPS #0

		0:	MOVB #PALETTE_BK11, @#177663
			WAIT
			MOVB #200 + PALETTE_BK11, @#177663
			
			CALL @PLAYER_ENTRY_POINTS + 2 		;PLAY
			
			BR 0

EXAMPLE_PLAY_EXIT:
			MOVB #100 + PALETTE_BK11, @#177663
			MTPS #340

			MOV (PC)+, SP
		SP_BRFORE_START:	.WORD 0
			MOV (PC)+, @(PC)+
		V4_BRFORE_START:	.WORD 0
							.WORD 4
			
			CALL @PLAYER_ENTRY_POINTS + 4 		;MUTE
			
			MOV #16000, @#177716 		;MKDOS,ANDOS PAGES 5-4
			RET 



;PLAYER BEGIN -------------------------------------------------------------

PLAYER_ENTRY_POINTS:

						.WORD INIT 					;+0  First call before playback
						.WORD PLAY 					;+2  Main play call for the next position in PT3 file (one quark, one tick)
						.WORD MUTE 					;+4  Mute the sound

INTEGRATION_POINTS:

	FRAME_NUMBER:			.WORD 0 							;+6  Incremented by one each time the PLAY entry point is accessed
	TS_PRESENT:				.WORD 0 							;+10 TS sign
	SEL_DEVICE:				.WORD 0 							;+12 Auto selected device: 0 - legacy AY/YM or TurboSound or GryphonSound, 1 - AZBK 
	PARAMETERS_AY1_ADDR:	.WORD PARAMETERS_AY1 				;+14 Address of the operating parameters of AY1
	PARAMETERS_AY2_ADDR:	.WORD PARAMETERS_AY2 				;+16 Address of the operating parameters of AY2
	AYREGS_AY1:				.WORD PARAMETERS_AY1 + PARAM_AYREGS ;+20 Address of last sent AY1 register values
	AYREGS_AY2:				.WORD PARAMETERS_AY2 + PARAM_AYREGS ;+22 Address of last sent AY2 register values
	PT3FILE_MODULE1_ADDR:	.WORD PT3FILE 						;+24 PT3 file address
	PT3FILE_MODULE2_ADDR:	.WORD 0 							;+26 Address of module 2 (TS) in PT3 file
	PT3FILE_END_ADDR:		.WORD 0 							;+30 Address of end PT3 file
	END_OF_PT3FILE:			.WORD 0 							;+32 CODA. End of PT3 file reached (incremented by one each time)
	NO_REPEAT_MODE:			.WORD 0 							;+34 Play without repeat. Set (not zero) before INIT call.
	REPETITION_NUMBER: 		.WORD 0 							;+36 Number of elapsed repetitions after end of PT3 file



	CUR_PARAMS_ADDR:		.WORD 0


TS_ID:
		.ASCII 'PT3!PT3!02TS'
TS_ID_END:

TS_ID_CHECK:
			MOV #4, R4
		0:	CMPB -(R0), -(R2)
			BNE 1
			SOB R4, 0
		1:	RET

INIT:
			CLR TS_PRESENT
			CLR SEL_DEVICE
			CLR FRAME_NUMBER
			CLR END_OF_PT3FILE
			CLR PT3FILE_MODULE2_ADDR
			CLR REPETITION_NUMBER
			MOV #PT3FILE_END, PT3FILE_END_ADDR

			MOV #PARAM_DEVICES_AY1, R3
			CLR (R3)+
			MOV #100000, (R3)+
			MOV #AY_1_PORT_AZBK, (R3)+
			;MOV #PARAMETERS_AY1, R3
			MOV PT3FILE_MODULE1_ADDR, R1

	TS_DETECT:
			MOV PT3FILE_END_ADDR, R0
			MOV #TS_ID_END, R2
			CALL TS_ID_CHECK
			BNE INIT_NEXT
			SUB #2, R0			;SKIP LENGTH OF SECOND MODULE
			CALL TS_ID_CHECK
			BNE INIT_NEXT
			CLR R5				;GET OFFSET TO SECOND MODULE
			BISB -(R0), R5
			SWAB R5
			BISB -(R0), R5
			ADD PT3FILE_MODULE1_ADDR, R5    ;GET ADDRESS OF SECOND MODULE
			CALL TS_ID_CHECK
			BNE INIT_NEXT

			INC TS_PRESENT

	AZBK_DETECT:

			AY_1_PORT_AZBK = 		177172
			AY_2_PORT_AZBK = 		177174

			MOV @#4, SYSTEM_VECTOR4
			MOV SP, SYSTEM_SP
			MOV #AZBK_DETECT_END, @#4

			MOV #AY_1_PORT_AZBK, R0
			CLR R2
			MOVB R2, (R0)+		
			MOVB R2, (R0)+		
			MOVB R2, (R0)+		
			MOVB R2, (R0)+		

	AZBK_DETECTED:
			MOV #240, REG_OUT_DEVICE_MANAGE 	;NOP
			INC SEL_DEVICE

	AZBK_DETECT_END:

			MOV (PC)+, SP
		SYSTEM_SP:	.WORD 0
			MOV (PC)+, @(PC)+
		SYSTEM_VECTOR4: .WORD 0
						.WORD 4

			MOV R5, -(SP)

			CALL INIT_NEXT

			MOV (SP)+, R1

			MOV R1, PT3FILE_MODULE2_ADDR

			MOV #PARAM_DEVICES_AY2, R3
			MOV #1, (R3)+
			MOV #40000, (R3)+
			MOV #AY_2_PORT_AZBK, (R3)+
			;MOV #PARAMETERS_AY2, R3

INIT_NEXT:

	 		MOV R3, CUR_PARAMS_ADDR

			MOV R1, PARAM_MODULE_ADDRESS(R3)
			MOV R1, R5  
			MOVB 100.(R5), PARAM_DELAY(R3)
			ADD #200., R1   
			MOV R1, PARAM_CURRENTPOSITION(R3)
			MOVB 102.(R5), R2 
			ADD R2, R1
			INC R1
			MOV R1, PARAM_LOOPPOSITION(R3)
			CLR R1
			BISB 104.(R5), R1 
			SWAB R1
			BISB 103.(R5), R1 
			ADD R5, R1  
			MOV R1, PARAM_PATTERNSPOINTER(R3) 
			MOV #169., R1
			ADD R5, R1  
			MOV R1, PARAM_ORNAMENTSPOINTERS(R3)  
			MOV #105., R1
			ADD R5, R1  
			MOV R1, PARAM_SAMPLESPOINTERS(R3)

 			MOV R5, -(SP)
 
 			MOV #TABLES_PACK, R4 
			MOV #PARAM_TAB_WORK + 98., R5
			ADD R3, R5

			MOV #4, R3
			MOV #12., R2
	0: 		MOV (R4)+, R0   
			ASL R0  
			BR  2  

	1: 		CLR R1
			BISB (R4)+, R1   
			ADD R1, R0  
			ADD R1, R0
	2: 		MOV R0, -(R5)   
			SOB R2, 1  
			MOVB (R4)+, R2   
			INC R4
			BIC #1, R4  
			SOB R3, 0  

			MOV CUR_PARAMS_ADDR, R5

 
 			MOV #PARAM_VAR0START, R1
 			ADD R5, R1
			MOV #PARAM_VAR0END - PARAM_VAR0START, R3
	3: 		CLRB (R1)+
			SOB R3, 3


			MOVB #1, PARAM_DELAYCOUNTER(R5)
			MOV #0XF001, R0 
			MOV #EMPTY_SAM_ORN, R2
			MOV #PARAM_CHANNEL_A, R4
			ADD R5, R4

			MOV (PC)+, R3
			.BYTE   AY_TONA, AY_AMPLITUDEA
			CALL FILL
			
			MOV (PC)+, R3
			.BYTE   AY_TONB, AY_AMPLITUDEB
			CALL FILL
			
			MOV (PC)+, R3
			.BYTE   AY_TONC, AY_AMPLITUDEC
			CALL FILL

			MOV (SP)+, R5

			MOVB 13.(R5), R0  
			SUB #60, R0  
			BCS 4  
			CMPB R0, #10.
			BLO 5  
	4: 		MOV #6, R0   
	5: 		MOV CUR_PARAMS_ADDR, R2
			MOVB R0, PARAM_VERSION(R2) 
			MOV R0, -(SP)   
			CMPB R0, #4   
			MOVB 99.(R5), R0  
			ROLB R0   
			BICB #177770, R0  

NOTE_TABLE_MAKER:

			MOV R1, -(SP)   
			MOV #NT_DATA, R1
			ADD R0, R1
			ADD R0, R1
			ADD R0, R1  
			CLR R2
			BISB (R1)+, R2   
			MOV (PC)+, R0
			NOP
			TSTB (R1)+   
			BEQ 0
			MOV (PC)+, R0   
 			CLC
	0: 		MOV R0, MULTY_SUBR

			CLR R3
			BISB (R1), R3
			ADD #TABLES ,R3
			ADD  (SP)+, R2   

			MOV R3, -(SP)
			MOV #PARAM_NOTE_TAB, R1 
			ADD CUR_PARAMS_ADDR, R1
			MOV R1, -(SP)

			MOV #12., R4 
	1: 		MOV (R2)+, R3   

			MOV R1, -(SP)
			MOV #8., R5  
	2:		CLC
			ROR R3
			CALL MULTY_SUBR   
			MOV R3, R0
			ADC R0
			MOV R0, (R1)
			ADD #24., R1
			SOB R5, 2
			MOV (SP)+, R1
			TST (R1)+   
			SOB R4, 1

			MOV (SP)+, R2   
			MOV (SP)+, R1   

			CMP R1, #TAB_C_OLD_1
			BNE 3
			MOV CUR_PARAMS_ADDR, R0
			MOVB #0XFD, PARAM_NOTE_TAB + 56(R0)
	3:		CLR R0
			BISB (R1)+, R0
			BEQ 5
			CLR R5
			RORB R0  
			ROL R5  
			ASLB R0  
			ADD R0, R2  
			TST R5  
			BEQ 4
			SUB #2, (R2)
	4: 		INC (R2)
			SUB R0, R2 
			BR  3

	5: 		MOV (SP)+, R0   


VOL_TABLE_MAKER:

			MOV #21, R3 
			CLR R1  
			CMPB R0, #5  
			MOV (PC)+, R0
			ASLB R0  
			BHIS 0
			DEC R3  
			MOV R3, R1  
			MOV (PC)+, R0
			NOP  
	0: 		MOV R0, MULTY_SUBR

			MOV #PARAM_VOL_TAB, R4 
			ADD CUR_PARAMS_ADDR, R4
			MOV R4, R5
			MOV #16., R2 
			ADD R2, R5
			MOV #256./2, R0
	1: 		CLR (R4)+   
			SOB R0, 1

	2: 		MOV R3, -(SP)  

			ADD R3, R1  
			MOV #0, R3  
			SBC R3  

	3: 		MOVB R3, R0  
			MOV R3, R4  
			CLRB R4
			SWAB R4  
			CALL MULTY_SUBR
			ADCB R4
			MOVB R4, (R5)+
			ADD R1, R3
			INC R2  
			MOV R2, R0
			BIC #177760, R0
			BNE 3
			MOV (SP)+, R3
			CMP R1, #119.
			BNE 4
			INC R1
	4: 		TSTB R2  
			BNE 2
			JMP REG_OUT

MULTY_SUBR:
	 		NOP
			RET

PLAY:		
			INC FRAME_NUMBER

			MOV #PARAMETERS_AY1, R4

			TST TS_PRESENT
			BEQ PLAY_NEXT

			CALL PLAY_NEXT

			MOV #PARAMETERS_AY2, R4
PLAY_NEXT:

			MOV R4, CUR_PARAMS_ADDR

			CLR PARAM_ADDTOENVELOPE(R4)
			CLRB PARAM_AYREGS + AY_MIXER(R4)
			MOVB #-1, PARAM_AYREGS + AY_ENVELOPETYPE(R4)
			DECB PARAM_DELAYCOUNTER(R4)
 			BHI 5 
 			MOV #PARAM_CHANNEL_A, R5
 			ADD R4, R5
 			DECB CHP_NOTE_SKIP_COUNTER(R5)
 			BNE 2
 			MOV CHP_ADDRESS_IN_PATTERN(R5), R3
 			TSTB (R3)
 			BNE 1
 			CLRB PARAM_NOISE_BASE(R4)
 			MOV PARAM_CURRENTPOSITION(R4), R0
 			INC R0
 			MOVB (R0), R1

 			CMPB #377, R1
 			BNE 0

 			INC END_OF_PT3FILE

 			TST NO_REPEAT_MODE
 			BEQ 00
				INCB PARAM_DELAYCOUNTER(R4)
				INCB PARAM_CHANNEL_A + CHP_NOTE_SKIP_COUNTER(R4)
				JMP MUTE

 	00:		MOV PARAM_LOOPPOSITION(R4), R0
 			MOVB (R0), R1

 			INC REPETITION_NUMBER 				;Next repeat

	0:		MOV R0, PARAM_CURRENTPOSITION(R4)
			BIC #177400, R1
			ASL R1
 			ADD PARAM_PATTERNSPOINTER(R4), R1 
 			MOV PARAM_MODULE_ADDRESS(R4), R2

			CLR R3
 			BISB (R1)+, R3   
 			SWAB R3
 			BISB (R1)+, R3   
 			SWAB R3   
 			ADD R2, R3

 			CLR R0
 			BISB (R1)+, R0
			SWAB R0
			BISB (R1)+, R0
			SWAB R0
			ADD R2, R0
			MOV R0, PARAM_CHANNEL_B + CHP_ADDRESS_IN_PATTERN(R4)

			CLR R0
			BISB (R1)+, R0
			SWAB R0
			BISB (R1)+, R0
			SWAB R0
			ADD R2, R0
			MOV R0, PARAM_CHANNEL_C + CHP_ADDRESS_IN_PATTERN(R4)

	1: 		CALL PATTERN_INTERPR
 			MOV R3, CHP_ADDRESS_IN_PATTERN(R5)

	2: 		ADD #CHP, R5
 			DECB CHP_NOTE_SKIP_COUNTER(R5)
 			BNE 3
 			MOV CHP_ADDRESS_IN_PATTERN(R5), R3
 			CALL PATTERN_INTERPR
 			MOV R3, CHP_ADDRESS_IN_PATTERN(R5)

	3: 		ADD #CHP, R5
 			DECB CHP_NOTE_SKIP_COUNTER(R5)
 			BNE 4
 			MOV CHP_ADDRESS_IN_PATTERN(R5), R3
 			CALL PATTERN_INTERPR
 			MOV R3, CHP_ADDRESS_IN_PATTERN(R5)

	4: 		MOVB PARAM_DELAY(R4), PARAM_DELAYCOUNTER(R4)

	5: 		MOV #PARAM_CHANNEL_A, R5
			ADD R4, R5
			CALL CHANGE_REGS
			CALL CHANGE_REGS
 			CALL CHANGE_REGS

 			MOVB PARAM_NOISE_BASE(R2), R0  
 			ADD PARAM_ADDTONOISE(R2), R0
 			MOVB R0, PARAM_AYREGS + AY_NOISE(R2)

			MOV PARAM_ENVELOPE_BASE(R2), R0
			ADD PARAM_ADDTOENVELOPE(R2), R0
			ADD PARAM_CUR_ENV_SLIDE(R2), R0
			MOVB R0, PARAM_AYREGS + AY_ENVELOPE(R2)
			SWAB R0
			MOVB R0, PARAM_AYREGS + AY_ENVELOPE + 1(R2)

			MOV #PARAM_CUR_ENV_DELAY, R0
			ADD R2, R0
			TSTB (R0)
			BEQ REG_OUT
			DECB (R0)
			BNE REG_OUT
			MOVB PARAM_ENV_DELAY(R2), (R0)
			ADD PARAM_ENV_SLIDE_ADD(R2), PARAM_CUR_ENV_SLIDE(R2)

REG_OUT: 	MOV CUR_PARAMS_ADDR, R0
			MOV R0, R4

			MOV -(R0), AY_PORT_AZBK
			MOV -(R0), GS_SELECTOR
			MOV -(R0), TS_SELECTOR

			ADD #PARAM_AYREGS + AY_ENVELOPETYPE, R4

  	REG_OUT_DEVICE_MANAGE:
			BR LEGACY_REG_OUT

			MOV (PC)+, R5
	AY_PORT_AZBK:	.WORD 0
			MOV #15, R1
			MOVB (R4), R0
			BMI 0
			MOVB R1, (R5)
			MOVB R0, 1(R5)
	0: 		DEC R1
			BMI 1
	 		MOVB R1, (R5)
			MOVB -(R4), 1(R5)
			BR 0
	1:		RET

LEGACY_REG_OUT:
			MOV #177714, R5
			MOV (PC)+, (R5)
	TS_SELECTOR:	.WORD 0
			MOV #362, R1
			BIS (PC)+, R1
  	GS_SELECTOR:	.WORD 0
			MOVB (R4), R0
			BMI 0
			MOV R1, (R5)
			COMB R0
			MOVB R0, (R5)
	0: 		INC R1
	1: 		MOV R1, (R5)
			MOVB -(R4), R0
			COMB R0
			MOVB R0, (R5)
			INCB R1
			BMI 1
			RET

MUTE:
	 		MOV #PARAMETERS_AY1, R4
			CALL MUTE_NEXT
			MOV #PARAMETERS_AY2, R4
MUTE_NEXT:
			MOV R4, CUR_PARAMS_ADDR
			CLR PARAM_AYREGS + AY_AMPLITUDEA(R4)
			CLRB PARAM_AYREGS + AY_AMPLITUDEC(R4)
			MOVB #77, PARAM_AYREGS + AY_MIXER(R4)
			BR REG_OUT


PD_ORSM: 	CLRB CHP_ENVELOPE_ENABLED(R5)
			CALL SET_ORNAMENT
			MOVB (R3)+, R0
			BR  PD_SAM_

PD_SAM: 	SUB #0XD0, R0
			ASL R0
PD_SAM_: 	ADD PARAM_SAMPLESPOINTERS(R4), R0
			CLR R1
			BISB (R0)+, R1
			SWAB R1
			BISB (R0), R1
			SWAB R1
			TST R1
			BEQ 0  
			ADD PARAM_MODULE_ADDRESS(R4), R1
			MOV R1, CHP_SAMPLEPOINTER(R5)
		0:	BR  PD_LOOP

PD_VOL: 	BIC #0XFFF0, R0
			ASL R0
			ASL R0
			ASL R0
			ASL R0
			MOVB R0, CHP_VOLUME(R5)
			BR  PD_LOOP

PD_EOFF: 	CLRB CHP_ENVELOPE_ENABLED(R5)
			CLRB CHP_POSITION_IN_ORNAMENT(R5)
			BR  PD_LOOP

PD_SORE: 	BIC #0XFFF0, R0
			DECB R0
			BNE PD_ENV
			MOVB (R3)+, CHP_NUMBER_OF_NOTES_TO_SKIP(R5)
			BR  PD_LOOP

PD_ENV: 	CALL SET_ENVELOPE
			CLRB CHP_POSITION_IN_ORNAMENT(R5)
			BR  PD_LOOP

PD_ORN: 	CALL SET_ORNAMENT
			BR  PD_LOOP

PD_ESAM: 	CLRB CHP_ENVELOPE_ENABLED(R5)
			BIC #0XFFF0, R0
			BEQ 0
			CALL SET_ENVELOPE
		0:	CLRB CHP_POSITION_IN_ORNAMENT(R5)
			MOVB (R3)+, R0
			BR  PD_SAM_

PATTERN_INTERPR:
			MOV CHP_NOTE(R5), PARAM_PRNOTE(R4)
			MOV CHP_CURRENT_TON_SLIDING(R5), PARAM_PRSLIDING(R4)

PD_LOOP: 	CLR R0
			BISB (R3)+, R0
			CMPB R0, #0XF0
			BHIS PD_ORSM  
			CMPB R0, #0XD0
			BEQ PD_FIN  
			BHI PD_SAM  
			CMPB R0, #0XC0
			BEQ PD_REL  
			BHI PD_VOL
			CMPB R0, #0XB0
			BEQ PD_EOFF  
			BHI PD_SORE  
  
			CMPB R0, #0X50
			BHIS PD_NOTE  
			CMPB R0, #0X40
			BHIS PD_ORN  
			CMPB R0, #0X20
			BHIS PD_NOIS 
			CMPB R0, #0X10
			BHIS PD_ESAM 
  
			ASL R0
			MOV SPEC_SUBR(R0), -(SP)  
			BR  PD_LOOP

PD_NOIS: 	BIC #0XFFE0, R0
			MOVB R0, PARAM_NOISE_BASE(R4)
			BR  PD_LOOP

PD_REL: 	CLRB CHP_ENABLED(R5)
			BR  PD_RES

PD_NOTE:	SUB #0X50, R0
			MOV R0, CHP_NOTE(R5)
			MOVB #-1, CHP_ENABLED(R5)

PD_RES: 	MOV R5, R0
			CLR (R0)+   
			CLR (R0)+   
			CLR (R0)+   
			CLR (R0)+   
			CLR (R0)+   
			CLR (R0) 

PD_FIN: 	MOVB CHP_NUMBER_OF_NOTES_TO_SKIP(R5), CHP_NOTE_SKIP_COUNTER(R5)
			RET

SUBR_PORTM:
		 	CLRB CHP_SIMPLEGLISS(R5)
			MOVB (R3)+, R0

 			INC R3
			INC R3
			MOVB R0, CHP_TON_SLIDE_DELAY(R5)
			MOVB R0, CHP_TON_SLIDE_COUNT(R5)
			MOV CHP_NOTE(R5), R2
			MOV R2, CHP_SLIDE_TO_NOTE(R5)
			ASL R2
			ADD R4, R2
			MOV PARAM_NOTE_TAB(R2), R2
			MOV PARAM_PRNOTE(R4), R1
			MOV R1, CHP_NOTE(R5)
			ASL R1
			ADD R4, R1
			MOV PARAM_NOTE_TAB(R1), R1
			SUB R1, R2
			MOV R2, CHP_TON_DELTA(R5)   
			MOV CHP_CURRENT_TON_SLIDING(R5), R1
			CMPB PARAM_VERSION(R4), #6
			BLO OLDPRTM  
			MOV PARAM_PRSLIDING(R4), R1
			MOV R1, CHP_CURRENT_TON_SLIDING(R5)
OLDPRTM: 	CLR R0
			BISB (R3)+, R0   
			SWAB R0
			BISB (R3)+, R0   
			SWAB R0
			TST R0   
			BPL 0
			NEG R0
		0:	SUB R1, R2  
			BPL 1   
			NEG R0
		1:	MOV R0, CHP_TON_SLIDE_STEP(R5)
			CLRB CHP_CURRENT_ONOFF(R5)
			RET

SUBR_GLISS:
		 	MOVB (PC), CHP_SIMPLEGLISS(R5)
			MOVB (R3)+, R0
			MOVB R0, CHP_TON_SLIDE_DELAY(R5)
			BNE GL36
 
			CMPB PARAM_VERSION(R4), #7 
			BLO GL36
			INCB R0  
GL36: 		MOVB R0, CHP_TON_SLIDE_COUNT(R5)
			MOVB (R3)+, CHP_TON_SLIDE_STEP(R5) 
			MOVB (R3)+, CHP_TON_SLIDE_STEP + 1(R5) 
			CLRB CHP_CURRENT_ONOFF(R5)
			RET

SUBR_SMPOS:
		 	MOVB (R3)+, CHP_POSITION_IN_SAMPLE(R5)
			RET

SUBR_ORPOS:
		 	MOVB (R3)+, CHP_POSITION_IN_ORNAMENT(R5)
			RET

SUBR_VIBRT:
		 	MOVB (R3), CHP_ONOFF_DELAY(R5)
			MOVB (R3)+, CHP_CURRENT_ONOFF(R5)
			MOVB (R3)+, CHP_OFFON_DELAY(R5)
			CLRB CHP_TON_SLIDE_COUNT(R5)
			CLR CHP_CURRENT_TON_SLIDING(R5)
			RET

SUBR_ENGLS:
		 	MOVB (R3), PARAM_ENV_DELAY(R4)
			MOVB (R3)+, PARAM_CUR_ENV_DELAY(R4)
			MOVB (R3)+, PARAM_ENV_SLIDE_ADD(R4)
			MOVB (R3)+, PARAM_ENV_SLIDE_ADD + 1(R4)
			RET

SUBR_DELAY:
		 	MOVB (R3)+, PARAM_DELAY(R4)
			RET

SET_ENVELOPE:
			MOVB #0X10, CHP_ENVELOPE_ENABLED(R5)
			MOVB R0, PARAM_AYREGS + AY_ENVELOPETYPE(R4)
			MOVB (R3)+, PARAM_ENVELOPE_BASE + 1(R4)
			MOVB (R3)+, PARAM_ENVELOPE_BASE(R4) 
			CLRB PARAM_CUR_ENV_DELAY(R4)
			CLR PARAM_CUR_ENV_SLIDE(R4)
SUBR_NOP:
	 		RET

SET_ORNAMENT:
 			BIC #0XFFF0, R0
			ASL R0
			ADD PARAM_ORNAMENTSPOINTERS(R4), R0
			CLR R1
			BISB (R0)+, R1
			SWAB R1
			BISB (R0), R1
			SWAB R1
			TST R1
			BNE 0
			MOV #EMPTY_SAM_ORN, R1
			BR 1
		0:	ADD PARAM_MODULE_ADDRESS(R4), R1
		1:	MOV R1, CHP_ORNAMENTPOINTER(R5)
			CLRB CHP_POSITION_IN_ORNAMENT(R5)
			RET

SPEC_SUBR: 	.WORD   SUBR_NOP
			.WORD   SUBR_GLISS 
			.WORD   SUBR_PORTM 
			.WORD   SUBR_SMPOS 
			.WORD   SUBR_ORPOS 
			.WORD   SUBR_VIBRT 
			.WORD   SUBR_NOP
			.WORD   SUBR_NOP
			.WORD   SUBR_ENGLS
			.WORD   SUBR_DELAY 
			.WORD   SUBR_NOP
			.WORD   SUBR_NOP
			.WORD   SUBR_NOP
			.WORD   SUBR_NOP
			.WORD   SUBR_NOP
			.WORD   SUBR_NOP

CHANGE_REGS:
			CLR R1  
			TSTB CHP_ENABLED(R5)
			BNE CHANGE_REGS_NEXT

	CHANGE_REGS_EXIT:
			MOVB CHP_AMPL_REG(R5), R0
			MOV CUR_PARAMS_ADDR, R2
			ADD R2, R0
			MOVB R1, PARAM_AYREGS(R0)
			ASRB PARAM_AYREGS + AY_MIXER(R2)
			TSTB CHP_CURRENT_ONOFF(R5)
			BEQ 1
			DECB CHP_CURRENT_ONOFF(R5)
			BNE 1
			MOVB CHP_ONOFF_DELAY(R5), R0
			COMB CHP_ENABLED(R5)
			BNE 0
			MOVB CHP_OFFON_DELAY(R5), R0
		0:	MOVB R0, CHP_CURRENT_ONOFF(R5)
		1:	ADD #CHP, R5
			RET

	CHANGE_REGS_NEXT:

			MOV CHP_ORNAMENTPOINTER(R5), R1 
			MOVB (R1)+, R4   
			MOVB (R1)+, R3   
			MOVB CHP_POSITION_IN_ORNAMENT(R5), R0 
			ADD R0, R1
			INCB R0
			CMPB R0, R3
			BLO 0
			MOVB R4, R0
	0:		MOVB R0, CHP_POSITION_IN_ORNAMENT(R5)
			MOV CHP_NOTE(R5), R0 
			MOVB (R1), R1 
			ADD R1, R0
			BPL 1
			CLR R0
	1:	 	CMP R0, #96.
			BLO 2
			MOV #95., R0
	2:	 	ASL R0
			MOV R0, -(SP)   
			MOV CHP_SAMPLEPOINTER(R5), R1   
			MOVB (R1)+, R4   
			MOVB (R1)+, R3   
			MOVB CHP_POSITION_IN_SAMPLE(R5), R0  
			ADD R0, R1
			ADD R0, R1
			ADD R0, R1
			ADD R0, R1
			INCB R0
			CMPB R0, R3
			BLO 3
			MOVB R4, R0
	3:	 	MOVB R0, CHP_POSITION_IN_SAMPLE(R5)
			MOVB (R1)+, R3   
			MOVB (R1)+, R4   
			CLR R2
			BISB (R1)+, R2   
			SWAB R2
			BISB (R1), R2
			SWAB R2
			ADD CHP_TON_ACCUMULATOR(R5), R2
			BIT #0X40, R4   
			BEQ 4
			MOV R2, CHP_TON_ACCUMULATOR(R5)
	4:	 	MOV (SP)+, R1   
			ADD CUR_PARAMS_ADDR, R1
			ADD PARAM_NOTE_TAB(R1), R2 
			MOV CHP_CURRENT_TON_SLIDING(R5), R1 
			ADD R1, R2  
			BIC #0XF000, R2
			MOVB CHP_TONE_REG(R5), R0
			ADD CUR_PARAMS_ADDR, R0
			MOV R2, PARAM_AYREGS(R0)  

			TSTB CHP_TON_SLIDE_COUNT(R5)
			BEQ 7
			DECB CHP_TON_SLIDE_COUNT(R5)
			BNE 7
			MOVB CHP_TON_SLIDE_DELAY(R5), CHP_TON_SLIDE_COUNT(R5)
			MOV CHP_TON_SLIDE_STEP(R5), R2
			ADD R2, R1  
			MOV R1, CHP_CURRENT_TON_SLIDING(R5)
			TSTB CHP_SIMPLEGLISS(R5) 
			BNE 7
			MOV CHP_TON_DELTA(R5), R0
			TST R2  
  
			BPL 5
			CMP R1, R0
			BLE 6
			BR  7

	5:		CMP R1, R0
			BLT 7
	6:		MOV CHP_SLIDE_TO_NOTE(R5), CHP_NOTE(R5)
			CLRB CHP_TON_SLIDE_COUNT(R5)
			CLR CHP_CURRENT_TON_SLIDING(R5)

	7: 		MOVB CHP_CURRENT_AMPLITUDE_SLIDING(R5), R0   
			BIT #0X80, R3   
			BEQ 10
			BIT #0X40, R3   
			BEQ 8
			CMPB R0, #15. 
			BEQ 10
			INCB R0   
			BR  9
 
	8:	 	CMPB R0, #-15.   
			BEQ 10
			DECB R0   
	9:	 	MOVB R0, CHP_CURRENT_AMPLITUDE_SLIDING(R5)
	10: 	MOV R4, R1  
			BIC #0XFFF0, R1 
			ADD R1, R0  
			BPL 11
			CLR R0
	11:		CMP R0, #16.
			BLO 12
			MOV #15., R0 
	12:		BISB CHP_VOLUME(R5), R0  
			ADD CUR_PARAMS_ADDR, R0
			MOVB PARAM_VOL_TAB(R0), R1 
			BIT #1, R3  
			BNE 13
			BISB CHP_ENVELOPE_ENABLED(R5), R1 
	13:		MOV R3, R0
			ASR R0
			BIC #0XFFE0, R0 
			BIT #0X80, R4   
			BEQ 16
			BIT #0X10, R0   
			BEQ 14   
			BIS #0XFFE0, R0 
	14:		ADD CHP_CURRENT_ENVELOPE_SLIDING(R5), R0
			BIT #0X20, R4   
			BEQ 15
			MOV R0, CHP_CURRENT_ENVELOPE_SLIDING(R5)
	15: 	MOV CUR_PARAMS_ADDR, R2
			ADD R0, PARAM_ADDTOENVELOPE(R2)
			BR 17

	16: 	MOVB CHP_CURRENT_NOISE_SLIDING(R5), R3   
			ADD R3, R0
			MOV CUR_PARAMS_ADDR, R2
			MOV R0, PARAM_ADDTONOISE(R2)
			BIT #0X20, R4   
			BEQ 17
			MOVB R0, CHP_CURRENT_NOISE_SLIDING(R5)

	17: 	ASR R4  
			BIC #177667, R4 
			BISB R4, PARAM_AYREGS + AY_MIXER(R2)
			JMP CHANGE_REGS_EXIT

FILL:	 	MOV R0, CHP_NOTE_SKIP_COUNTER(R4)
			MOV R2, CHP_ADDRESS_IN_PATTERN(R4)  
			MOV R2, CHP_ORNAMENTPOINTER(R4) 
			MOV R2, CHP_SAMPLEPOINTER(R4)   
			MOV R3, CHP_TONE_REG(R4)
			ADD #CHP, R4
			RET


			AY_TONA = 0
			AY_TONB = 2
			AY_TONC = 4
			AY_NOISE = 6
			AY_MIXER = 7
			AY_AMPLITUDEA = 8.
			AY_AMPLITUDEB = 9.
			AY_AMPLITUDEC = 10.
			AY_ENVELOPE = 11.
			AY_ENVELOPETYPE = 13.



			CHP_POSITION_IN_ORNAMENT = 0 
			CHP_POSITION_IN_SAMPLE = 1 
			CHP_CURRENT_AMPLITUDE_SLIDING= 2 
			CHP_CURRENT_NOISE_SLIDING = 3 
			CHP_CURRENT_ENVELOPE_SLIDING = 4 
			CHP_CURRENT_TON_SLIDING = 6 
			CHP_TON_ACCUMULATOR = 8. 
			CHP_TON_SLIDE_COUNT = 10.   
			CHP_CURRENT_ONOFF = 11.   
			CHP_ONOFF_DELAY = 12.   
			CHP_OFFON_DELAY = 13.   
			CHP_ENVELOPE_ENABLED = 14.   
			CHP_SIMPLEGLISS = 15.   
			CHP_ENABLED = 16.   
			CHP_ADDRESS_IN_PATTERN = 18.   
			CHP_ORNAMENTPOINTER = 20.   
			CHP_SAMPLEPOINTER = 22.   
			CHP_SLIDE_TO_NOTE = 24.   
			CHP_NOTE = 26.   
			CHP_TON_SLIDE_STEP = 28.   
			CHP_TON_DELTA = 30.   
			CHP_NUMBER_OF_NOTES_TO_SKIP = 32.   
			CHP_TON_SLIDE_DELAY = 33.   
			CHP_NOTE_SKIP_COUNTER = 34.   
			CHP_VOLUME = 35.   
			CHP_TONE_REG = 36.   
			CHP_AMPL_REG = 37.   
			CHP = 38.

TABLES:

TAB_C_OLD_0:
 			.BYTE 0X00 + 1, 0X04 + 1, 0X08 + 1, 0X0A + 1, 0X0C + 1, 0X0E + 1, 0X12 + 1, 0X14 + 1
 			.BYTE 0X18 + 1, 0X24 + 1, 0X3C + 1, 0
TAB_C_NEW_1:
TAB_C_OLD_1:
		 	.BYTE 0X5C + 1, 0
TAB_C_OLD_2:
			.BYTE 0X30 + 1, 0X36 + 1, 0X4C + 1, 0X52 + 1, 0X5E + 1, 0X70 + 1, 0X82, 0X8C
 			.BYTE 0X9C, 0X9E, 0XA0, 0XA6, 0XA8, 0XAA, 0XAC, 0XAE, 0XAE, 0

TAB_C_NEW_3:
			.BYTE 0X56 + 1
TAB_C_OLD_3:
			.BYTE 0X1E + 1, 0X22 + 1, 0X24 + 1, 0X28 + 1, 0X2C + 1, 0X2E + 1, 0X32 + 1, 0XBE + 1, 0

TAB_C_NEW_0:
		 	.BYTE 0X1C + 1, 0X20 + 1, 0X22 + 1, 0X26 + 1, 0X2A + 1, 0X2C + 1, 0X30 + 1, 0X54 + 1
 			.BYTE 0XBC + 1, 0XBE + 1, 0

TAB_C_NEW_2:
			.BYTE 0X1A + 1, 0X20 + 1, 0X24 + 1, 0X28 + 1, 0X2A + 1, 0X3A + 1, 0X4C + 1, 0X5E + 1
 			.BYTE 0XBA + 1, 0XBC + 1, 0XBE + 1, 0

EMPTY_SAM_ORN: 
 			.BYTE 0, 1, 0, 0X90, 0, 0 
 			.EVEN

TABLES_PACK:
		 	.WORD 0X06EC
 			.BYTE 0X0755-0X06EC
			.BYTE 0X07C5-0X0755
			.BYTE 0X083B-0X07C5
			.BYTE 0X08B8-0X083B
			.BYTE 0X093D-0X08B8
			.BYTE 0X09CA-0X093D
			.BYTE 0X0A5F-0X09CA
			.BYTE 0X0AFC-0X0A5F
			.BYTE 0X0BA4-0X0AFC
			.BYTE 0X0C55-0X0BA4
			.BYTE 0X0D10-0X0C55
			.BYTE 13.   
			.EVEN
			.WORD 0X066D
			.BYTE 0X06CF-0X066D
			.BYTE 0X0737-0X06CF
			.BYTE 0X07A4-0X0737
			.BYTE 0X0819-0X07A4
			.BYTE 0X0894-0X0819
			.BYTE 0X0917-0X0894
			.BYTE 0X09A1-0X0917
			.BYTE 0X0A33-0X09A1
			.BYTE 0X0ACF-0X0A33
			.BYTE 0X0B73-0X0ACF
			.BYTE 0X0C22-0X0B73
			.BYTE 0X0CDA-0X0C22
			.BYTE 12.   
			.EVEN
			.WORD 0X0704
			.BYTE 0X076E-0X0704
			.BYTE 0X07E0-0X076E
			.BYTE 0X0858-0X07E0
			.BYTE 0X08D6-0X0858
			.BYTE 0X095C-0X08D6
			.BYTE 0X09EC-0X095C
			.BYTE 0X0A82-0X09EC
			.BYTE 0X0B22-0X0A82
			.BYTE 0X0BCC-0X0B22
			.BYTE 0X0C80-0X0BCC
			.BYTE 0X0D3E-0X0C80
			.BYTE 12.   
			.EVEN
			.WORD 0X07E0
			.BYTE 0X0858-0X07E0
			.BYTE 0X08E0-0X0858
			.BYTE 0X0960-0X08E0
			.BYTE 0X09F0-0X0960
			.BYTE 0X0A88-0X09F0
			.BYTE 0X0B28-0X0A88
			.BYTE 0X0BD8-0X0B28
			.BYTE 0X0C80-0X0BD8
			.BYTE 0X0D60-0X0C80
			.BYTE 0X0E10-0X0D60
			.BYTE 0X0EF8-0X0E10
			.EVEN

NT_DATA:
			.BYTE   PARAM_TAB_WORK_NEW_0 - PARAM_TAB_WORK, 0, TAB_C_NEW_0 - TABLES
 			.BYTE   PARAM_TAB_WORK_OLD_0 - PARAM_TAB_WORK, 1, TAB_C_OLD_0 - TABLES
 			.BYTE   PARAM_TAB_WORK_NEW_1 - PARAM_TAB_WORK, 1, TAB_C_NEW_1 - TABLES
 			.BYTE   PARAM_TAB_WORK_OLD_1 - PARAM_TAB_WORK, 1, TAB_C_OLD_1 - TABLES
 			.BYTE   PARAM_TAB_WORK_NEW_2 - PARAM_TAB_WORK, 0, TAB_C_NEW_2 - TABLES
 			.BYTE   PARAM_TAB_WORK_OLD_2 - PARAM_TAB_WORK, 0, TAB_C_OLD_2 - TABLES
 			.BYTE   PARAM_TAB_WORK_NEW_3 - PARAM_TAB_WORK, 0, TAB_C_NEW_3 - TABLES
 			.BYTE   PARAM_TAB_WORK_OLD_3 - PARAM_TAB_WORK, 0, TAB_C_OLD_3 - TABLES
 			.EVEN


			PARAM_TAB_WORK = PARAM_VOL_TAB + 16. 
			PARAM_TAB_WORK_OLD_1 = PARAM_TAB_WORK
			PARAM_TAB_WORK_OLD_2 = PARAM_TAB_WORK_OLD_1 + 24.
			PARAM_TAB_WORK_OLD_3 = PARAM_TAB_WORK_OLD_2 + 24.
			PARAM_TAB_WORK_OLD_0 = PARAM_TAB_WORK_OLD_3 + 2.

			PARAM_TAB_WORK_NEW_0 = PARAM_TAB_WORK_OLD_0
			PARAM_TAB_WORK_NEW_1 = PARAM_TAB_WORK_OLD_1
			PARAM_TAB_WORK_NEW_2 = PARAM_TAB_WORK_NEW_0 + 24.
			PARAM_TAB_WORK_NEW_3 = PARAM_TAB_WORK_OLD_3


			PARAM_VERSION = 				0
			PARAM_DELAY =	 				1
			PARAM_ENV_DELAY =	 			2

			PARAM_MODULE_ADDRESS =	 		4
			PARAM_SAMPLESPOINTERS = 		6
			PARAM_ORNAMENTSPOINTERS =	 	10
			PARAM_PATTERNSPOINTER = 		12
			PARAM_LOOPPOSITION = 			14
			PARAM_CURRENTPOSITION = 		16

			PARAM_VAR0START =	 			20

			PARAM_PRNOTE =					PARAM_VAR0START
			PARAM_PRSLIDING =	 			22
			PARAM_ADDTOENVELOPE =	 		24
			PARAM_ENV_SLIDE_ADD =			26
			PARAM_CUR_ENV_SLIDE =			30
			PARAM_ADDTONOISE =				32
			PARAM_DELAYCOUNTER =			34
			PARAM_CUR_ENV_DELAY =			35
			PARAM_NOISE_BASE =				36

			PARAM_CHANNEL_A =	 			40
			PARAM_CHANNEL_B =	 			PARAM_CHANNEL_A + CHP
			PARAM_CHANNEL_C = 				PARAM_CHANNEL_B + CHP

			PARAM_AYREGS =					PARAM_CHANNEL_C + CHP

			PARAM_VOL_TAB = 				PARAM_AYREGS
			PARAM_NOTE_TAB =				PARAM_VOL_TAB + 256.

			PARAM_SIZE =					PARAM_NOTE_TAB + (96. * 2)

			PARAM_ENVELOPE_BASE =	 		PARAM_AYREGS + 14.
			
			PARAM_VAR0END =					PARAM_TAB_WORK



PT3FILE:
			INSERT_FILE "22_fmradio_6ch.pt3"
PT3FILE_END:
			.EVEN
PT3FILE_END_EVENED:

			;PARAM_DEVICES_AY1:
			;				.WORD 0 				;TURBOSOUND AY#1
			;				.WORD 100000			;MASK OF ONE OF THE GRYPHONSOUND AY
			;				.WORD AY_1_PORT_AZBK
			;	PARAMETERS_AY1:
			;				.BLKB PARAM_SIZE

			;PARAM_DEVICES_AY2:
			;				.WORD 1 				;TURBOSOUND AY#2
			;				.WORD 40000				;MASK OF ANOTHER GRYPHONSOUND AY
			;				.WORD AY_2_PORT_AZBK
			;	PARAMETERS_AY2:
			;				.BLKB PARAM_SIZE


			PARAM_DEVICES_AY1 = PT3FILE_END_EVENED
			PARAMETERS_AY1 = PARAM_DEVICES_AY1 + 6 ;SKIP TURBOSOUND SELECTOR (0), GRYPHONSOUND MASK (100000), PORT AZBK (AY_1_PORT_AZBK)

			PARAM_DEVICES_AY2 = PARAMETERS_AY1 + PARAM_SIZE
			PARAMETERS_AY2 = PARAM_DEVICES_AY2 + 6 ;SKIP TURBOSOUND SELECTOR (1), GRYPHONSOUND MASK (40000), PORT AZBK (AY_2_PORT_AZBK)


